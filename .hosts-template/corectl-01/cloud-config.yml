#cloud-config
coreos:
  update:
    reboot-strategy: off
  etcd2:
    name: default
    data-dir: /data/var/lib/etcd2
    initial-advertise-peer-urls: http://127.0.0.1:2380
    initial-cluster-token: default_etcd
    initial-cluster: default=http://127.0.0.1:2380
    initial-cluster-state: new
    listen-peer-urls: http://0.0.0.0:2380,http://0.0.0.0:7001
    listen-client-urls: http://0.0.0.0:2379,http://0.0.0.0:4001
    advertise-client-urls:  http://0.0.0.0:2379,http://0.0.0.0:4001
  units:
    - name: docker-tcp.socket
      command: start
      enable: true
      content: |
        [Unit]
        Description=Docker Secured Socket for the API
        [Socket]
        ListenStream=2376
        BindIPv6Only=both
        Service=docker.service
        [Install]
        WantedBy=sockets.target
    - name: docker.service
      command: start
      enable: true
      drop-ins:
        - name: 10-docker-opts.conf
          content: |
            [Service]
            Environment="DOCKER_OPTS=-g /data/var/lib/docker --tlsverify --tlscacert=/etc/docker/ca.pem --tlscert=/etc/docker/server-cert.pem --tlskey=/etc/docker/server-key.pem"
    - name: docker-tls-certificates.service
      command: restart
      content: |
        [Unit]
        Description=Create tls cerfiticates for docker-tcp.socket
        Before=docker-tcp.socket
        [Service]
        ExecStart=/opt/bin/create-docker-tls-certificates
    - name: format-persistent-disk.service
      command: start
      content: |
        [Unit]
        Description=Formats the persistent drive (if not formated)
        Requires=data.mount
        Before=data.mount
        [Service]
        Type=oneshot
        RemainAfterExit=yes
        ExecStart=/bin/sh -c '/usr/sbin/blkid -pi /dev/vda | grep TYPE= || /usr/sbin/mkfs.ext4 -i 8192 -L core_data /dev/vda'
    - name: data.mount
      command: start
      content: |
        [Unit]
        Description=Mounts ephemeral to /data
        Requires=format-persistent-disk.service etcd2.service docker.service rkt-metadata.socket
        After=format-persistent-disk.service
        Before=etcd2.service docker.service rkt-metadata.socket
        [Mount]
        What=/dev/vda
        Where=/data
        Type=ext4
    - name: persistent-data-checks.service
      command: start
      content: |
        [Unit]
        Description=prepare for etcd,docker,rkt,opt
        Requires=data.mount etcd2.service
        Before=etcd2.service
        After=data.mount
        [Service]
        Type=oneshot
        RemainAfterExit=yes
        ExecStart=/bin/sh -c '[[ -d /data/var/lib/etcd2 ]] || mkdir -p /data/var/lib/etcd2 && /usr/bin/chown etcd:etcd /data/var/lib/etcd2'
        ExecStart=/bin/sh -c '/usr/bin/chown etcd:etcd /data/var/lib/etcd2'
        ExecStart=/bin/sh -c '[[ -d /data/var/lib/docker ]] || mkdir -p /data/var/lib/docker
        ExecStart=/bin/sh -c '[[ -d /data/var/lib/rkt ]] || mkdir -p /data/var/lib/rkt && /usr/bin/chown root:rkt /data/var/lib/rkt && /usr/bin/chmod g+s /data/var/lib/rkt'
        ExecStart=/bin/sh -c '/usr/bin/chown root:rkt /data/var/lib/rkt && /usr/bin/chmod g+s /data/var/lib/rkt'
write_files:
    - path: /opt/bin/create-docker-tls-certificates
      permissions: 0755
      content: |
        #!/bin/bash
        set -e
        if [ -f "/etc/docker/ca-key.pem" ];then
            exit 0
        fi
        /usr/bin/mkdir -p /etc/docker
        tmp_dir=$(/usr/bin/mktemp -d)
        IP_ADDR=$(/usr/bin/ifconfig eth0 | /usr/bin/grep 'inet ' | /usr/bin/sed -r 's/.*inet\s([0-9]+\.[0-9]+\.[0-9]+\.[0-9]+).*/\1/g')
        /usr/bin/echo -e '[req]\ndistinguished_name = req_distinguished_name\n[req_distinguished_name]' > /etc/ssl/openssl.cnf
        /usr/bin/echo "subjectAltName = DNS:$HOSTNAME,IP:$IP_ADDR" > extfile-server.cnf
        /usr/bin/echo "extendedKeyUsage = clientAuth" > extfile-client.cnf
        /usr/bin/openssl genrsa -aes256 -passout pass:corectl -out /etc/docker/ca-key.pem 4096
        /usr/bin/openssl req -new -x509 -days 365 -key /etc/docker/ca-key.pem -sha256 -subj "/C=--/ST=--/L=--/O=--/OU=--/CN=$IP_ADDR" -passin pass:corectl -out /etc/docker/ca.pem
        /usr/bin/openssl genrsa -out /etc/docker/server-key.pem 4096
        /usr/bin/openssl req -subj "/CN=$IP_ADDR" -sha256 -new -key /etc/docker/server-key.pem -out server.csr
        /usr/bin/openssl x509 -req -days 365 -sha256 -in server.csr -CA /etc/docker/ca.pem -CAkey /etc/docker/ca-key.pem -CAcreateserial -passin pass:corectl -out /etc/docker/server-cert.pem -extfile extfile-server.cnf
        /usr/bin/openssl genrsa -out $tmp_dir/key.pem 4096
        /usr/bin/openssl req -subj "/CN=client" -new -key $tmp_dir/key.pem -out client.csr
        /usr/bin/openssl x509 -req -days 365 -sha256 -in client.csr -CA /etc/docker/ca.pem -CAkey /etc/docker/ca-key.pem -CAcreateserial -passin pass:corectl -out $tmp_dir/cert.pem -extfile extfile-client.cnf
        /usr/bin/cp /etc/docker/ca.pem $tmp_dir/ca.pem
        /usr/bin/chmod -v 0400 /etc/docker/ca-key.pem $tmp_dir/key.pem /etc/docker/server-key.pem
        /usr/bin/chmod -v 0444 /etc/docker/ca.pem /etc/docker/server-cert.pem $tmp_dir/cert.pem
        /usr/bin/chown -R core:core $tmp_dir
        /usr/bin/rm -rfv server.csr client.csr extfile-server.cnf extfile-client.cnf /home/core/.docker
        /usr/bin/mv $tmp_dir /home/core/.docker
